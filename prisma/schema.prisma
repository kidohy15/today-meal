// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String?
  name          String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Comments      Comment[]
  Recipes       Recipe[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Recipe {
  id          Int       @id @default(autoincrement())
  title       String?
  ingredients String[]
  contents    String?
  writer      String?
  image       String[]
  createdAt   DateTime  @default(now())
  userId      Int?
  user        User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Comments    Comment[]
}

// tobe: 유저 id 가져올 수 있도록 추가하고 나서 user 컬럼 옵셔널 제거하고 필수값으로 변경
model Comment {
  id        Int      @id @default(autoincrement())
  recipeId  Int
  userId    Int
  contents  String
  createdAt DateTime @default(now())
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([recipeId, userId])
}
